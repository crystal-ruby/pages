%section#next
  %h2 My next Plans
  %p Benchmarks
  %p Bootstrapping
  %p Parfait

%section#bench
  %h2 Benchmarks
  %p Micro with mixed results
  %p Integer ops slightly slower
  %p Calling 2x slower
  %p Puts faster than C

%section#bench_conclusion
  %h2 Conclusion from Benchmarks
  %p Bigger benchmarks, more functionality
  %p Profiling
  %p Macros / better design
  %p Inlining

%section#better_parf
  %h2 Better Parfait
  %p Integrate existing tests
  %p Complement existing classes
  %p More classes
  %p Optimize

%section#you
  %h2 Things you can do
  %p Spread the word
  %p Try / learn
  %p Participate

%section#try
  %h2 Try
  %p clone https://github.com/ruby-x/rubyx
  %p bundle
  %p ruby test/test_all.rb
  %p ./bin/rubyxc compile/interpret/execute
  %p compile test/mains/source/10_add__4.rb

%section#participate
  %h2 Participate
  %p Many topics, small and large
  %p.fragment Functionality or research
  %p.fragment no pressure

%section#topics
  %h2 Topics, easy
  %p String methods
  %p.fragment other Parfait
  %p.fragment negative tests
  %p.fragment error handling

%section#topics
  %h2 Topics, medium
  %p break / next
  %p.fragment switch
  %p.fragment assembler (eg intel)
  %p.fragment stdlib (File ?)
  %p.fragment exception

%section#community
  %h2 Impact on community
  %p assuming bootstrapped + working
  %p.fragment new applications
  %p.fragment desktops, native mobile, server, ai
  %p.fragment Broaden base, more tools, positive spiral

%section#community2
  %h2 Community's ruby
  %p For and BY the community
  %p.fragment very pro open source
  %p.fragment democratic open source
  %p.fragment everybody must be heard

%section#evolution
  %h2 Evolution
  %p small core , gems + bundler
  %p.fragment democracy of gems
  %p.fragment better gc, better hash
  %p.fragment good thrive etc
  %p.fragment best results when not controlled
